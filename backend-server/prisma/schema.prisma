generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id           Int       @id @default(autoincrement())
  cart_id      Int?
  item_id      Int?
  instructions String?
  quantity     Int?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
  carts        carts?    @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  items        items?    @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model carts {
  id         Int          @id @default(autoincrement())
  user_id    Int?
  cart_completed Boolean?   @default(false)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  updated_at DateTime?    @default(now()) @db.Timestamp(6)
  cart_items cart_items[]
  users      users?       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model items {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(100)
  description String?
  price       Float?
  category    String?      @db.VarChar(50)
  image_url   String?
  created_at  DateTime?    @default(now()) @db.Timestamp(6)
  updated_at  DateTime?    @default(now()) @db.Timestamp(6)
  cart_items  cart_items[]
}

model users {
  id         Int       @id @default(autoincrement())
  username   String    @unique @db.VarChar(50)
  password   String    @db.VarChar(255)
  email      String    @unique @db.VarChar(100)
  role       String?   @default("user") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  carts      carts[]
}
